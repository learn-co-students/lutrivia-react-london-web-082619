{"ast":null,"code":"import _objectSpread from \"/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/components/Game.js\";\nimport React from 'react';\nimport QuestionsContainer from '../containers/QuestionsContainer';\nimport ScoreForm from './ScoreForm';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGuess = guess => {};\n\n    this.state = {\n      questions: props.questions.map(question => {\n        return _objectSpread({}, question, {\n          guess: \"\"\n        });\n      }),\n      questionsRemaining: props.questions.length,\n      score: 0\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(QuestionsContainer, {\n      questions: this.state.questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), this.state.questionsRemaining === 0 ? React.createElement(ScoreForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/components/Game.js"],"names":["React","QuestionsContainer","ScoreForm","Game","Component","constructor","props","updateGuess","guess","state","questions","map","question","questionsRemaining","length","score","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,WATkB,GASHC,KAAD,IAAW,CAExB,CAXiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEJ,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAAI;AAAC,iCAAWA,QAAX;AAAqBJ,UAAAA,KAAK,EAAE;AAA5B;AAAgC,OAAjE,CADF;AAETK,MAAAA,kBAAkB,EAAEP,KAAK,CAACI,SAAN,CAAgBI,MAF3B;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAMDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAE,kBAAF;AAAqB,MAAA,SAAS,EAAE,KAAKA,KAAL,CAAWC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEM,KAAKD,KAAL,CAAWI,kBAAX,KAAkC,CAAlC,GAAsC,oBAAE,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,GAAuD,IAF7D,CADJ;AAMH;;AAvB8B;;AA2BnC,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport QuestionsContainer from '../containers/QuestionsContainer';\nimport ScoreForm from './ScoreForm'\n\nclass Game extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            questions: props.questions.map(question => {return {...question, guess: \"\"}}),\n            questionsRemaining: props.questions.length,\n            score: 0\n        }\n    }\n\n    updateGuess = (guess) => {\n        \n    }\n\n    render(){\n        console.log(this.state)\n        return(\n            <div>\n                < QuestionsContainer questions={this.state.questions}/>\n                { this.state.questionsRemaining === 0 ? < ScoreForm /> : null}\n            </div>\n        )\n    }\n\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}