{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/App.js\";\nimport React from 'react';\nimport './index.css';\nimport data from './data';\nimport Game from './components/Game';\nimport ScoresContainer from './containers/ScoresContainer';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: data.questions,\n      scores: [{}],\n      gameInProgress: true\n    };\n\n    this.startNewGame = () => {\n      this.setState({\n        gameInProgress: !this.state.gameInProgress\n      });\n    };\n\n    this.addScore = (playerName, score) => {\n      this.setState({\n        scores: [...scores, {\n          name: playerName,\n          score: score\n        }]\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.questions);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(\"button\", {\n      onClick: () => this.startNewGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"New Game\"), this.state.gameInProgress ? React.createElement(Game, {\n      questions: this.state.questions.slice(0, 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : null, React.createElement(ScoresContainer, {\n      scores: this.state.scores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/App.js"],"names":["React","data","Game","ScoresContainer","App","Component","state","questions","scores","gameInProgress","startNewGame","setState","addScore","playerName","score","name","render","console","log","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAEN,IAAI,CAACM,SADV;AAENC,MAAAA,MAAM,EAAE,CAAC,EAAD,CAFF;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAFwB;;AAAA,SAQhCC,YARgC,GAQjB,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADhB,OAAd;AAGD,KAZ+B;;AAAA,SAchCG,QAdgC,GAcrB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAChC,WAAKH,QAAL,CAAc;AACZH,QAAAA,MAAM,EAAE,CACN,GAAGA,MADG,EAEN;AACEO,UAAAA,IAAI,EAAEF,UADR;AAEEC,UAAAA,KAAK,EAAEA;AAFT,SAFM;AADI,OAAd;AASD,KAxB+B;AAAA;;AA0BhCE,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,SAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKG,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGG,KAAKJ,KAAL,CAAWG,cAAX,GAA4B,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,SAAX,CAAqBY,KAArB,CAA2B,CAA3B,EAA6B,CAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAkF,IAHrF,EAIE,oBAAE,eAAF;AAAkB,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWE,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASD;;AArC+B;;AA0ClC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport data from './data'\nimport Game from './components/Game'\nimport ScoresContainer from './containers/ScoresContainer';\n\nclass App extends React.Component {\n\n  state = {\n    questions: data.questions,\n    scores: [{}],\n    gameInProgress: true\n  }\n\n  startNewGame = () => {\n    this.setState({\n      gameInProgress: !this.state.gameInProgress\n    })\n  }\n\n  addScore = (playerName, score) => {\n    this.setState({\n      scores: [\n        ...scores, \n        {\n          name: playerName,\n          score: score\n        }\n      ]\n    })\n  }\n\n  render(){\n    console.log(this.state.questions)\n    return(\n      <div>\n        <h1>Lutrivia</h1>\n        <button onClick={() => this.startNewGame()}>New Game</button>\n        {this.state.gameInProgress ? <Game questions={this.state.questions.slice(0,4)}/> : null }\n        < ScoresContainer scores={this.state.scores}/>\n      </div>\n   \n    )\n  }\n\n}\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}