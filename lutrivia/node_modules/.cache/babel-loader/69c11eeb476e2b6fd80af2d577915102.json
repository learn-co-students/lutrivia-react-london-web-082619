{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/components/Game.js\";\nimport React from 'react';\nimport QuestionsContainer from '../containers/QuestionsContainer';\nimport ScoreForm from './ScoreForm';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = (question, answer) => {\n      if (question.answer === true && answer === \"true\") {\n        this.increaseScore();\n      } else if (question.answer === false && answer === \"false\") {\n        this.increaseScore();\n      }\n\n      this.reduceQuestionsRemaining();\n      console.log(this.state);\n    };\n\n    this.increaseScore = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.reduceQuestionsRemaining = () => {\n      this.setState({\n        questionsRemaining: this.state.questionsRemaining - 1\n      });\n    };\n\n    this.state = {\n      questions: props.questions,\n      questionsRemaining: props.questions.length,\n      score: 0\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(QuestionsContainer, {\n      questions: this.state.questions,\n      checkAnswer: this.checkAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), this.state.questionsRemaining === 0 ? React.createElement(ScoreForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/components/Game.js"],"names":["React","QuestionsContainer","ScoreForm","Game","Component","constructor","props","checkAnswer","question","answer","increaseScore","reduceQuestionsRemaining","console","log","state","setState","score","questionsRemaining","questions","length","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,WATkB,GASJ,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAChC,UAAID,QAAQ,CAACC,MAAT,KAAoB,IAApB,IAA4BA,MAAM,KAAK,MAA3C,EAAkD;AAC9C,aAAKC,aAAL;AACH,OAFD,MAEO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,KAApB,IAA6BA,MAAM,KAAK,OAA5C,EAAoD;AACvD,aAAKC,aAAL;AACH;;AACD,WAAKC,wBAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH,KAjBiB;;AAAA,SAmBlBJ,aAnBkB,GAmBF,MAAM;AAClB,WAAKK,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AADhB,OAAd;AAGH,KAvBiB;;AAAA,SAyBlBL,wBAzBkB,GAyBS,MAAM;AAC7B,WAAKI,QAAL,CAAc;AACVE,QAAAA,kBAAkB,EAAE,KAAKH,KAAL,CAAWG,kBAAX,GAAgC;AAD1C,OAAd;AAGH,KA7BiB;;AAEd,SAAKH,KAAL,GAAa;AACTI,MAAAA,SAAS,EAAEZ,KAAK,CAACY,SADR;AAETD,MAAAA,kBAAkB,EAAEX,KAAK,CAACY,SAAN,CAAgBC,MAF3B;AAGTH,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAwBDI,EAAAA,MAAM,GAAE;AACJR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAE,kBAAF;AACI,MAAA,SAAS,EAAE,KAAKA,KAAL,CAAWI,SAD1B;AAEI,MAAA,WAAW,EAAE,KAAKX,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAIM,KAAKO,KAAL,CAAWG,kBAAX,KAAkC,CAAlC,GAAsC,oBAAE,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,GAAuD,IAJ7D,CADJ;AAQH;;AA3C8B;;AA+CnC,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport QuestionsContainer from '../containers/QuestionsContainer';\nimport ScoreForm from './ScoreForm'\n\nclass Game extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            questions: props.questions,\n            questionsRemaining: props.questions.length,\n            score: 0\n        }\n    }\n\n    checkAnswer = (question, answer) => {\n        if (question.answer === true && answer === \"true\"){\n            this.increaseScore()\n        } else if (question.answer === false && answer === \"false\"){\n            this.increaseScore()\n        }\n        this.reduceQuestionsRemaining();\n        console.log(this.state)\n    }\n\n    increaseScore = () => {\n        this.setState({\n            score: this.state.score + 1\n        })\n    }\n\n    reduceQuestionsRemaining = () => {\n        this.setState({\n            questionsRemaining: this.state.questionsRemaining - 1\n        })\n    }\n\n    render(){\n        console.log(this.state)\n        return(\n            <div>\n                < QuestionsContainer \n                    questions={this.state.questions} \n                    checkAnswer={this.checkAnswer}/>\n                { this.state.questionsRemaining === 0 ? < ScoreForm /> : null}\n            </div>\n        )\n    }\n\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}