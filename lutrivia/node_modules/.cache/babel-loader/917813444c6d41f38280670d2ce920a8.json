{"ast":null,"code":"import _objectSpread from \"/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/components/Game.js\";\nimport React from 'react';\nimport QuestionsContainer from '../containers/QuestionsContainer';\nimport ScoreForm from './ScoreForm';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scoreQuestion = (question, guess) => {\n      debugger;\n\n      let updatedQuestion = _objectSpread({}, question, {\n        guess: guess\n      });\n\n      this.state.questions.filter(q => {\n        q.text != question.text;\n      });\n    };\n\n    this.state = {\n      questions: props.questions.map(question => {\n        return _objectSpread({}, question, {\n          guess: \"\"\n        });\n      }),\n      questionsRemaining: props.questions.length,\n      score: 0\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(QuestionsContainer, {\n      questions: this.state.questions,\n      scoreQuestion: this.scoreQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.state.questionsRemaining === 0 ? React.createElement(ScoreForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/elizabethprendergast/Development/code/lutrivia-react-london-web-082619/lutrivia/src/components/Game.js"],"names":["React","QuestionsContainer","ScoreForm","Game","Component","constructor","props","scoreQuestion","question","guess","updatedQuestion","state","questions","filter","q","text","map","questionsRemaining","length","score","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,aATkB,GASF,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjC;;AAEA,UAAIC,eAAe,qBAAOF,QAAP;AAAiBC,QAAAA,KAAK,EAAEA;AAAxB,QAAnB;;AAEA,WAAKE,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4BC,CAAC,IAAI;AAC7BA,QAAAA,CAAC,CAACC,IAAF,IAAUP,QAAQ,CAACO,IAAnB;AACH,OAFD;AAMH,KApBiB;;AAEd,SAAKJ,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEN,KAAK,CAACM,SAAN,CAAgBI,GAAhB,CAAoBR,QAAQ,IAAI;AAAC,iCAAWA,QAAX;AAAqBC,UAAAA,KAAK,EAAE;AAA5B;AAAgC,OAAjE,CADF;AAETQ,MAAAA,kBAAkB,EAAEX,KAAK,CAACM,SAAN,CAAgBM,MAF3B;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAeDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAE,kBAAF;AAAqB,MAAA,SAAS,EAAE,KAAKA,KAAL,CAAWC,SAA3C;AAAsD,MAAA,aAAa,EAAE,KAAKL,aAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEM,KAAKI,KAAL,CAAWM,kBAAX,KAAkC,CAAlC,GAAsC,oBAAE,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,GAAuD,IAF7D,CADJ;AAMH;;AAhC8B;;AAoCnC,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport QuestionsContainer from '../containers/QuestionsContainer';\nimport ScoreForm from './ScoreForm'\n\nclass Game extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            questions: props.questions.map(question => {return {...question, guess: \"\"}}),\n            questionsRemaining: props.questions.length,\n            score: 0\n        }\n    }\n\n    scoreQuestion = (question, guess) => {\n        debugger\n\n        let updatedQuestion = {...question, guess: guess}\n\n        this.state.questions.filter(q => {\n            q.text != question.text\n        })\n\n\n\n    }\n\n    render(){\n        console.log(this.state)\n        return(\n            <div>\n                < QuestionsContainer questions={this.state.questions} scoreQuestion={this.scoreQuestion}/>\n                { this.state.questionsRemaining === 0 ? < ScoreForm /> : null}\n            </div>\n        )\n    }\n\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}